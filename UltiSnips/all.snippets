# Global snippets

# (c) holds no legal value ;)

snippet $ajax
$.ajax({
	type: 'POST',
	url: '${1}',
	data: {
		${2}
	}
}).done(function(data) {
	if(data.r){
		${3}
	}else{
		${4}
	}
}).fail(function() {
	${5}
})
endsnippet

snippet $on
$('${1}').on('${2:event}', '${3:element}', function(e){
  ${4}
})
endsnippet

snippet bjs
<%block filter="collect_js">
  ${1}
</%block>
endsnippet

snippet bcs
<%block filter="collect_css">
  ${1}
</%block>
endsnippet

snippet log
console.log(${1})
endsnippet

snippet req "require" b
var `!p
def formatVariableName(path):
	lastPart = path.split('/')[-1]
	if lastPart == 'underscore':
		return '_'
	elif lastPart == 'jquery':
		return '$'
	else:
		return re.sub(r'[_\-]', '', lastPart.title())
snip.rv = formatVariableName(t[1])
` = require('${1}')$0
endsnippet

snippet me "module.exports" b
module.exports = ${1:`!p snip.rv = ''.join(x.title() for x in re.sub('\.js$', '', snip.basename or 'ModuleName').split('_'))`}$0
endsnippet

snippet cc "createClass" b
var ${1:`!p snip.rv = ''.join(x.title() for x in re.sub('\.js$', '', snip.basename or 'ModuleName').split('_'))`} = React.createClass({
	render: function() {
		return (
			$0
		)
	}
})

module.exports = $1
endsnippet


snippet jq "jquery" b
var $ = require('jquery')
endsnippet

snippet mo "mo" b
@media $mobile
endsnippet


snippet jqp "jquery plugin" b
(function (factory) {
  if (typeof define === 'function' && define.amd) {
    define(['jquery'], factory)
  } else if (typeof exports === 'object') {
    factory(require('jquery'))
  } else {
    factory(jQuery)
  }
}(function ($) {
  $.fn.$1 = function($2) {
		$3
  }
  $.hoverDelay = function(el, over, out, ms) {
    var that = $(el)
  }

  $.fn.hoverDelay = function(over, out, ms){
    return this.each(function(){
      (new $.hoverDelay(this, over, out, ms))
    })
  }
}))
endsnippet
